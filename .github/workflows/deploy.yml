name: Deploy

on:
  workflow_call:
    inputs:
      node_version:
        description: The version of node to use
        required: false
        type: string
        default: "18"
      pnpm_version:
        description: The version of PNPM to use
        required: false
        type: string
        default: "8.7.6"
      stack_environment:
        description: The stack environment to deploy
        required: true
        type: string
      environment_name:
        description: The GitHub environment name
        required: true
        type: string
      environment_url:
        description: The GitHub environment url
        required: true
        type: string
      aws_session_name:
        description: AWS session name
        required: false
        type: string
      aws_region:
        description: The AWS region
        required: false
        type: string
        default: us-east-2
      ref:
        description: The git ref to checkout
        required: false
        type: string
      repository:
        description: The git repository to checkout
        required: false
        type: string
    secrets:
      AWS_ROLE_TO_ASSUME:
        required: true
      AWS_ACCOUNT:
        required: true
      TURBO_TOKEN:
        required: false
      TURBO_TEAM:
        required: false

env:
  CI: true

permissions:
  id-token: write
  contents: read
  deployments: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    environment:
      name: ${{ inputs.environment_name }}
      url: ${{ inputs.environment_url }}
    steps:
      - run: echo "::add-mask::${{ secrets.AWS_ACCOUNT }}"
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          repository: ${{ inputs.repository }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ inputs.pnpm_version }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm run deploy:one infra -- ${{ inputs.stack_environment }}
        env:
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
      # - run: |
      #       export TIME="$(TZ=GMT date +'%Y-%m-%d_%H-%M-%S')"
      #       git tag "${{ inputs.stack_environment }}_latest" --force
      #       git tag "${{ inputs.stack_environment }}_${TIME}"
      #       git push origin "${{ inputs.stack_environment }}_latest" --force
      #       git push origin "${{ inputs.stack_environment }}_${TIME}"
