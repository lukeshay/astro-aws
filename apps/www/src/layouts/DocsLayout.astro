---
import "../styles/docs.scss";
import BaseLayout from "./BaseLayout.astro";
import type { Link } from "../components/layout/LeftSidenav.astro";
import RightSideNav from "../components/layout/RightSideNav.astro";

const { frontmatter, headings } = Astro.props;
const docs = await Astro.glob("../pages/docs/**/*.md*");

const sectionOrder={
	"Start Here": 0,
	Packages: 1,
} as const;

type Section = keyof typeof sectionOrder;

const sections: Record<Section, (Link & { order: number | undefined })[]>={
	"Start Here": [],
	Packages: [],
};

docs
	.sort((a, b) => {
		const aSection = a.frontmatter.section as Section;
		const bSection = b.frontmatter.section as Section;

		const aOrder = sectionOrder[aSection] ?? 999;
		const bOrder = sectionOrder[bSection] ?? 999;
		return aOrder - bOrder;
	})
	.forEach((doc) => {
		const section = doc.frontmatter.section as Section;

		sections[section].push({
			href: doc.url,
			text: doc.frontmatter.title,
			order: doc.frontmatter.order as number | undefined,
		});
	});

Object.keys(sections).forEach((key) => {
	sections[key as Section].sort((a, b) => {
		const aOrder = a.order ?? 999;
		const bOrder = b.order ?? 999;

		return aOrder - bOrder;
	});
});
---

<BaseLayout sections={sections} title={frontmatter.title} description={frontmatter.description}>
	<RightSideNav headings={headings} url={frontmatter.url} />
	<div class="relative ml-60 mr-0 mt-20 flex flex-row justify-center px-12 lg:mr-60">
		<section class="docs w-full max-w-2xl pb-24">
			<slot />
		</section>
	</div>
</BaseLayout>
<script>
	import { createClipboardDocumentIcon } from "../components/html/icons/24/outline/create-clipboard-document-icon.js";

	document.querySelectorAll("pre.astro-code").forEach((pre) => {
		pre.classList.add("relative");

		const code = pre.querySelector("code")!;
		const copyButton = document.createElement("button");

		copyButton.classList.add("absolute", "top-2", "right-2", "btn", "btn-ghost", "btn-compact");
		copyButton.setAttribute("type", "button");
		copyButton.setAttribute("aria-label", "Copy to clipboard");
		copyButton.setAttribute("title", "Copy to clipboard");

		copyButton.innerHTML = createClipboardDocumentIcon({ class: "w-6 h-6" });

		copyButton.addEventListener("click", () => {
			navigator.clipboard.writeText(code.innerText);
		});
		pre.appendChild(copyButton);
	});
</script>
